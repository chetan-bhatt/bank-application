openapi: 3.0.0
info:
  version: 1.0.0
  title: APIs to demonstrate bank account operations
  description: APIs to demonstrate bank account operations
paths:
  /bank/accounts:
    post:
      description: Creates a bank account.
      requestBody:
        description: Account create request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/bank/accounts/{accountNumber}':
    get:
      description: Gets the account for the particular accountNumber.
      parameters:
        - in: path
          name: accountNumber
          description: accountNumber for getting the account
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Account's information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: Deposits the amount in the account with given accountNumber.
      parameters:
        - in: path
          name: accountNumber
          description: accountNumber in which the amount needs to be deposited
          schema:
            type: string
          required: true
      requestBody:
        description: Account deposit request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDepositRequest'
      responses:
        '200':
          description: Amount depsoited in the account successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/bank/accounts/{accountNumber}/transfer':
    post:
      description: Transfers amount from one account to another.
      parameters:
        - in: path
          name: accountNumber
          description: accountNumber of account from which the amount needs to be transferred
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTransferRequest'
        required: true
      responses:
        200:
          description: Amount transferred successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableBalanceResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AccountCreateRequest:
      properties:
        initialDeposit:
          type: number
          format: double
          description: Initial amount to be deposited at the time of account opening.
          example: 1000.00
    Account:
      properties:
        accountNumber:
          type: string
          description: unique account number
          example: 1
    AccountDepositRequest:
      properties:
        amount:
          type: number
          format: double
          description: Amount to be deposited
          example: 500.00
    ErrorResponse:
      properties:
        message:
          type: string
          example: Insufficient funds
    AccountTransferRequest:
      properties:
        toAccountNumber:
          type: string
        amount:
          type: number
          format: double
          example: 400.00
    AvailableBalanceResponse:
      properties:
        availableBalance:
          type: number
          format: double
          example: 400.00